create
list(range(5))	# [0,1,2,3,4]
list(range(1, 10, 2))	# start (1), end limit (10), step 2

Retrieve a range
l[:10]		# first 10 elements
l[0:2]		# index 0 to index 2-1=1, i.e. start at index 0 (item 1), and the object at index 2 is not included (index 1)
l[0:10]		# index 0 to index 10-1=9. Start at index 0 (item 1), and the object at index 10 is not included (index 9)
l[-1]		# last element
l[-2]		# second to last element
l[-10:]		# last 10 elements

repeat
[0] * 5 	# [0,0,0,0,0]
[1,2,3] * 2	# [1,2,3,1,2,3]

copy
l2 = l.copy()	# Otherwise l=l2 points to l

for e in nums:
  		# print every element
	print(e)

for i in range(len(nums)):
	# print every element
	print(nums[i])

search = "v"
list = ["a", "b", "v"]

in / not in operators

if search in list:
	print True 

if search not in list:
	print True

>>> 15 in [3,5,2,4,1]
False
>>> 3 in [3,5,2,4,1]
True

Reduce a list containing lists:			# myList = [[1, 2], [3], [4, 5]]
myList_flat = [j for i in myList for j in i] 	# myList_flat [1, 2, 3, 4, 5]
						
list.append() 	# from Python 3.7 items are preserved in the order they are appended or declared)
list.insert(int position, value)
list.sort()	# sorts original list and returns none. More typical to use sorted (below).
list.remove(item) OR del list[index]		
list.reverse()		# modifies the original list and returns none, so cannot use inline.
			# alternatively use mylist[::-1] to reverse a copy (more itensive)
min(list), max(list)
l[0]			# print first element (string indexing.txt for more)	

Square all the items in a list:
items = [1, 2, 3, 4, 5]
squared = []
for i in items:
    squared.append(i**2)

Map version:
items = [1, 2, 3, 4, 5]
squared = list(map(lambda x: x**2, items))


Filter a range:
number_list = range(-5, 5)
less_than_zero = list(filter(lambda x: x < 0, number_list))
print(less_than_zero)

Count frequency:
l.count("a")	# [a,a,b,c] => 2

Item with maximum frequency (a dict of frequencies):
d={}
for i in l:
	d[i]=a.count(i)  # [a:2, b:1, c:1] 

max_frequency=max(arrDict.values())	# 2

Reduce (rolling sum on list)
product = 1
list = [1, 2, 3, 4]
for num in list:
    product = product * num

# product = 24

from functools import reduce
product = reduce((lambda x, y: x * y), [1, 2, 3, 4])

# Output: 24

Unique (remove duplicates) requires converting it to a set
mylist = sorted(list(set(mylist)))	# Always use sorted outermost

sort a list:
sorted(myList)		# works on any interable

Convert a sentence to a list
s = "Hello everyone in the world"
l = s.split(' ') 	# create a list from a string

# convert a list to a space separated string (reverse of previous)
print(' '.join(l))

# shorthand for running a method on each item
print(' '.join(word.capitalise() for word in s)
