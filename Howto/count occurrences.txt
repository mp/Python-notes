# count number of times Bob is in a file
data = open('trash.txt').read()
count = data.count('Bob')

# count the number of occurrences in a list
def word_count(str):
    counts = dict()
    words = str.split()

    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1

    return counts

print( word_count('the quick brown fox jumps over the lazy dog.'))

# => {'the': 2, 'jumps': 1, 'brown': 1, 'lazy': 1, 'fox': 1, 'over': 1, 'quick': 1, 'dog.': 1} 


# count the number of occurrences in a list (external library)
from collections import Counter

# empty Counter
counter = Counter()
print(counter)  # Counter()

# Counter with initial values
counter = Counter(['a', 'a', 'b'])
print(counter)  # Counter({'a': 2, 'b': 1})

counter = Counter(a=2, b=3, c=1)
print(counter)  # Counter({'b': 3, 'a': 2, 'c': 1})

# --
# count number of occurrences of a word in a file
import re
from collections import Counter
f=open('myfile.txt', 'r')
passage = f.read()
words = re.findall(r'\w+', passage)
cap_words = [word.upper() for word in words]
# Converting to uppercase so that 'Is' & 'is' like words  should be considered as same words

word_counts = Counter(cap_words)
print(word_counts)
Counter({'USED': 2, 'IN': 2, 'THE': 2, 'FREQUENT': 2})

# count number of unique words in a file by using a set (unecessary)
words = []
count = 0

with open ("text.txt","r") as f:
    # Get a list of lines in the file and covert it into a set
    words = set(f.readlines()) 
    count = len(words) 

print(count)
